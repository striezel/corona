build_image_alpine:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/corona/ci-alpine:latest . -f Dockerfile_alpine
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/corona/ci-alpine:latest
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_alpine
      - .gitlab-ci.yml

alpine:
  image: registry.gitlab.com/striezel/corona/ci-alpine:latest
  stage: test
  retry: 2
  before_script:
    - apk update
    - apk upgrade
  script:
    - rustc --version
    - cargo --version
    - cargo run -- version
    - cargo test || cargo test

build_image_bionic:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/corona/ci-bionic:latest . -f Dockerfile_bionic
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/corona/ci-bionic:latest
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_bionic
      - .gitlab-ci.yml

bionic_failcheck:
  image: registry.gitlab.com/striezel/corona/ci-bionic:latest
  stage: test
  before_script:
    - apt-get update
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get upgrade -y
  script:
    - rustc --version
    - cargo --version
    - ./ci/failcheck_sqlite.sh

build_image_rocky:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/corona/ci-rocky:9 . -f Dockerfile_rocky
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/corona/ci-rocky:9
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_rocky
      - .gitlab-ci.yml

rocky:
  image: registry.gitlab.com/striezel/corona/ci-rocky:9
  stage: test
  retry: 2
  before_script:
    - yum update -y
  script:
    - rustc --version
    - cargo --version
    - cargo run -- version
    - cargo test || cargo test

build_image_debian:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/corona/ci-debian:12 . -f Dockerfile_debian
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/corona/ci-debian:12
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_debian
      - .gitlab-ci.yml

debian:
  image: registry.gitlab.com/striezel/corona/ci-debian:12
  stage: test
  retry: 2
  before_script:
    - apt-get update
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get upgrade -y
  script:
    - rustc --version
    - cargo --version
    - cargo run -- version
    - cargo test || cargo test

clippy:
  image: alpine:latest
  stage: test
  before_script:
    - apk update
    - apk add bash curl wget sqlite-dev gcc g++ openssl-dev
    - wget -O /tmp/ru.sh https://sh.rustup.rs
    - chmod u+x /tmp/ru.sh
    - /tmp/ru.sh -y --profile minimal --component clippy
    - source $HOME/.cargo/env
    - export PATH="$HOME/.cargo/bin:$PATH"
  script:
    - rustc --version
    - cargo --version
    - cargo clippy -- -D warnings
