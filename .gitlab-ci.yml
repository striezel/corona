alpine:
  image: alpine:latest
  stage: build
  before_script:
    - apk update
    - apk add bash cargo rust sqlite-dev
  script:
    - rustc --version
    - cargo --version
    - cd rust && cargo test

centos:
  image: centos:8
  stage: build
  before_script:
    - yum install -y bash cargo rust sqlite-devel
  script:
    - rustc --version
    - cargo --version
    - cd rust && cargo test

debian:
  image: debian:10-slim
  stage: build
  before_script:
    - apt-get update
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get install -y bash cargo rustc libsqlite3-dev
  script:
    - rustc --version
    - cargo --version
    - cd rust && cargo test

clippy:
  image: alpine:latest
  stage: build
  before_script:
    - apk update
    - apk add bash curl wget sqlite-dev gcc g++
    - wget -O /tmp/ru.sh https://sh.rustup.rs
    - chmod u+x /tmp/ru.sh
    - /tmp/ru.sh -y
    - source $HOME/.cargo/env
    - export PATH="$HOME/.cargo/bin:$PATH"
  script:
    - rustc --version
    - cargo --version
    - cd rust && cargo clippy -- -D warnings

php:
  image: debian:10-slim
  stage: build
  before_script:
    - apt-get update
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get install -y bash php-cli php-json php-sqlite3
  script:
    - php --version
    - ./ci/phplint.sh
    - php ./php/generate.php ./data/corona.db /tmp/output_directory
